// cyclical subpop.slim : ^Total mutation frequencies: (.*)$
//
// A test script using a cyclically varying subpop size
//
initialize() {
	initializeMutationRate(1e-6);
	initializeMutationType("m1", 0.5, "f", 0.0);
	initializeGenomicElementType("g1", m1, 1.0);
	initializeGenomicElement(g1, 0, 1e5-1);
	initializeRecombinationRate(1e-7);
}
1 early() {
	sim.addSubpop("p1", 2000);
}
early() {
	newSize = cos((sim.generation - 1) / 100) * 500 + 1500;
	p1.setSubpopulationSize(asInteger(newSize));
}
10000 late() { cat("\nTotal mutation frequencies: " + sum(sim.mutationFrequencies(NULL)) + "\n"); }
