// full Gravel.slim : ^Total mutation frequencies: (.*)$
//
// A test script for the Gravel model, to test splitting and admixture
//
initialize() {
    initializeMutationRate(2.36e-8);
    initializeMutationType("m1", 0.5, "f", 0.0);
    initializeGenomicElementType("g1", m1, 1.0);
    initializeGenomicElement(g1, 0, 10000);
    initializeRecombinationRate(1e-8);
}
1 { sim.addSubpop("p1", 7310); }
52080 { p1.setSubpopulationSize(14474); }
55960 {
    sim.addSubpopSplit("p2", 1861, p1);
    p1.setMigrationRates(c(p2), c(15e-5));
    p2.setMigrationRates(c(p1), c(15e-5));
}
57080 {
    sim.addSubpopSplit("p3", 554, p2);
    p2.setSubpopulationSize(1032);
    p1.setMigrationRates(c(p2, p3), c(2.5e-5, 0.78e-5));
    p2.setMigrationRates(c(p1, p3), c(2.5e-5, 3.11e-5));
    p3.setMigrationRates(c(p1, p2), c(0.78e-5, 3.11e-5));
}
57080:58000 {
    t = sim.generation - 57080;
    p2_size = round(1032 * exp(0.0038 * t));
    p3_size = round(554 * exp(0.0048 * t));
    p2.setSubpopulationSize(asInteger(p2_size));
    p3.setSubpopulationSize(asInteger(p3_size));
}
58000 late() {
    p1.outputSample(216);
    p2.outputSample(198);
    p3.outputSample(206);
}
58000 late() { cat("\nTotal mutation frequencies: " + sum(sim.mutationFrequencies(NULL)) + "\n"); }
